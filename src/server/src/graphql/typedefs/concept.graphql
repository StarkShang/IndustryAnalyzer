# import BigInt from "common.graphql"
# import PageInfo from "common.graphql"
# import PageParam from "common.graphql"
# import CommonMutationResult from "common.graphql"
# import Corporation from "corporation.graphql"
# import TechnologyConnection from "technology.graphql"

type ConceptRelatedCorporation {
    description: String!
    corporation: Corporation!
}

type ConceptRelatedCorporationEdge {
    node: ConceptRelatedCorporation!
    cursor: String!
}

type ConceptRelatedCorporationConnection {
    edges: [ConceptRelatedCorporationEdge!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type Concept {
    id: BigInt!
    name: String!
    description: String!
    industryChain: String!
    competitors(pageParam: PageParam): ConceptConnection!
    technologies(pageParam: PageParam): TechnologyConnection!
    corporations(pageParam: PageParam): ConceptRelatedCorporationConnection!
}

type ConceptEdge {
    node: Concept!
    cursor: String!
}

type ConceptConnection {
    edges: [ConceptEdge!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type Query {
    concept(id: BigInt!): Concept
}

input CreateOrUpdateConceptInput {
    id: BigInt
    name: String!
    description: String
}

input ConceptRelatedCorporationInput {
    description: String!
    corporationId: BigInt!
}

type Mutation {
    createOrUpdateConcept(input: CreateOrUpdateConceptInput!): Concept
    createConceptRelatedCorporation(conceptId: BigInt, relation: ConceptRelatedCorporationInput!): CommonMutationResult!
    createConceptRelatedCorporations(conceptId: BigInt, relations: [ConceptRelatedCorporationInput!]!): CommonMutationResult!
    createConceptRelatedTechnologies(conceptId: BigInt, technologyIds: [BigInt!]!): CommonMutationResult!
}
